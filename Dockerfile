# S·ª≠ d·ª•ng Node.js 22 v·ªõi Alpine (nh·∫π, t·ªëi ∆∞u)
FROM node:22-alpine AS builder

# Thi·∫øt l·∫≠p th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /usr/src/app

# Copy package.json v√† c√†i ƒë·∫∑t dependencies
COPY package*.json ./

# C√†i ƒë·∫∑t NestJS CLI (n·∫øu ch∆∞a c√≥)
RUN npm install && npm install -g @nestjs/cli

# Copy to√†n b·ªô m√£ ngu·ªìn
COPY . .

# Build ·ª©ng d·ª•ng
RUN npm run build

# ----------------- #
# T·∫°o production image
# ----------------- #

FROM node:22-alpine AS production

WORKDIR /usr/src/app

# Copy package.json v√† c√†i ƒë·∫∑t dependencies (ch·ªâ ph·∫ßn production)
COPY package*.json ./
RUN npm install --only=prod

# Copy th∆∞ m·ª•c build t·ª´ builder stage
COPY --from=builder /usr/src/app/dist ./dist

# Copy file m√¥i tr∆∞·ªùng
# COPY .env .env

# üõ† Copy th∆∞ m·ª•c prisma v√†o container
COPY --from=builder /usr/src/app/prisma ./prisma

# Ki·ªÉm tra file schema.prisma c√≥ t·ªìn t·∫°i kh√¥ng
RUN ls -l ./prisma

# Ch·∫°y Prisma migrations (n·∫øu c√≥)
RUN npx prisma generate


# Ch·∫°y ·ª©ng d·ª•ng
CMD ["node", "dist/main.js"]








# # Base image cho NestJS
# FROM node:22-alpine AS production

# WORKDIR /usr/src/app

# # Copy package.json v√† c√†i ƒë·∫∑t dependencies
# COPY package*.json ./
# RUN npm install --only=prod 
# # && npm rebuild bcrypt --build-from-source
# # Copy to√†n b·ªô source code
# COPY . .

# # Build ·ª©ng d·ª•ng
# RUN npm run build

# EXPOSE 3000

# # Copy file m√¥i tr∆∞·ªùng
# # COPY .env .env

# # Ch·∫°y Prisma migrations (n·∫øu s·ª≠ d·ª•ng Prisma)
# RUN npx prisma generate

# CMD ["node", "dist/main"]





